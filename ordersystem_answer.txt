Q1
==
SELECT postal_code, COUNT(postal_code) INTO OUTFILE '/tmp/11.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM CUSTOMER 
GROUP BY postal_code
ORDER BY postal_code ASC;

Q2
==
SELECT postal_code, COUNT(postal_code) as cc INTO OUTFILE '/tmp/12.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM CUSTOMER 
GROUP BY postal_code
HAVING cc > 1
ORDER BY postal_code DESC;

Q3
==
SELECT * INTO OUTFILE '/tmp/14.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM ORDERT
WHERE CUSTOMER_ID = 10001
ORDER BY ORDER_DATE DESC;

Q4
==
CREATE VIEW ordered_products AS
SELECT product_id, count(order_id) AS sum_products
FROM order_line
GROUP BY product_id;

CREATE VIEW top_product AS
SELECT product_id
FROM ordered_products
WHERE sum_products IN (SELECT MAX(sum_products) FROM ordered_products);

SELECT product_id, product_description  INTO OUTFILE '/tmp/15.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM PRODUCT
WHERE product_id IN (SELECT * FROM top_product)
ORDER BY product_id;

Q5
==
SELECT C.customer_id, C.customer_name, count(order_id) as cc INTO OUTFILE '/tmp/19.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM CUSTOMER C, ORDERT O
WHERE C.customer_id = O.customer_id
GROUP BY c.customer_id
ORDER BY cc DESC;

Q6
==
CREATE VIEW customer_orders AS
SELECT C.customer_id, C.customer_name, count(order_id) AS sum_orders
FROM CUSTOMER C, ORDERT O
WHERE C.customer_id = O.customer_id
GROUP BY C.customer_id;

SELECT customer_id, customer_name INTO OUTFILE '/tmp/20.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM customer_orders
WHERE sum_orders = (SELECT MAX(sum_orders) FROM customer_orders)
ORDER BY customer_id;

Q7
==
CREATE VIEW ordered_product_quantity AS 
SELECT product_id, sum(ORDERED_QUANTITY) AS sum_product_quantity 
FROM order_line 
GROUP BY product_id;

CREATE VIEW top_product_quantity AS 
SELECT product_id 
FROM ordered_product_quantity 
WHERE sum_product_quantity IN (SELECT MAX(sum_product_quantity) FROM ordered_product_quantity);

SET @mm = (SELECT MAX(sum_product_quantity) FROM ordered_product_quantity);

SELECT product_id, product_description, @mm INTO OUTFILE '/tmp/23.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM PRODUCT 
WHERE product_id IN (SELECT * FROM top_product_quantity)
ORDER BY product_id;

Q8
==
SELECT C.customer_id, C.customer_name, count(order_id) AS order_count INTO OUTFILE '/tmp/24.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM CUSTOMER C, ORDERT O 
WHERE C.customer_id = O.customer_id 
GROUP BY c.customer_id 
ORDER BY order_count DESC LIMIT 3;

Q9
==
SELECT distinct C.customer_id, C.customer_name INTO OUTFILE '/tmp/26.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM customer C, ordert O
WHERE C.customer_id = O.customer_id AND
order_date BETWEEN '2020-01-10' AND '2020-01-15'
ORDER BY C.customer_id ASC;

Q10
===
SELECT product_id, product_description, product_finish INTO OUTFILE '/tmp/31.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM product 
WHERE PRODUCT_FINISH LIKE '%White%'
ORDER BY product_id;

Q11
===
SELECT C.customer_id, C.customer_name INTO OUTFILE '/tmp/33.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM customer C
WHERE C.customer_id NOT IN
(SELECT O.customer_id 
    FROM ordert O)
ORDER BY C.customer_id DESC;

Q12
===
SELECT COUNT(*) INTO OUTFILE '/tmp/34.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM ordert
WHERE ORDER_DATE BETWEEN '2020-01-10' AND '2020-01-15';
    
Q13
===
select sum(OL.ORDERED_QUANTITY*P.STANDARD_PRICE) from ordert O natural join order_line OL natural join product P where order_id = 3;

Q14
===
select O.order_id, sum(OL.ORDERED_QUANTITY*P.STANDARD_PRICE) as total_payment INTO OUTFILE '/tmp/37.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM ordert O natural join order_line OL natural join product P group by O.order_id
ORDER BY total_payment DESC;

Q15
===
CREATE VIEW order_totalpayment
AS select O.order_id, sum(OL.ORDERED_QUANTITY*P.STANDARD_PRICE) as total_payment 
FROM ordert O natural join order_line OL natural join product P group by O.order_id;

SELECT c.customer_id, c.customer_name INTO OUTFILE '/tmp/38.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
FROM customer C 
WHERE C.customer_id IN
    (SELECT O.customer_ID FROM ordert O WHERE 
        O.order_id IN (SELECT T.order_id FROM order_totalpayment T WHERE T.total_payment >=(SELECT MAX(T2.total_payment) FROM order_totalpayment T2)));


